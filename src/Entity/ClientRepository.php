<?php

/**
 * This file is part of the authbucket/oauth2-php package.
 *
 * (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Perseids\ClientsManager\Entity;

use AuthBucket\OAuth2\Model\ClientManagerInterface;
use Perseids\ClientsManager\Entity\AbstractEntityRepository;

/**
 * ClientRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ClientRepository extends AbstractEntityRepository implements ClientManagerInterface
{
    /**
    * Count users that match the given criteria.
    *
    * @param array $criteria
    * @return int The number of users that match the criteria.
    */
    public function findCount(array $criteria = array())
    {
        return $this->createQueryBuilder('id')
            ->select('COUNT(id)')
            ->getQuery()
            ->getSingleScalarResult()
        ;
    }


    /**
     *  Update a client in the DB
     * @param  Client $client [description]
     * @return -
     */
    public function update(Client $client)
    {
        $this->getEntityManager()->persist($client);
        $this->getEntityManager()->flush();
    }

    /**
     * Create a new instance of the entity of this repository
     * @return Client A client Instance (Empty)
     */
    
    public function create()
    {
        $class = $this->getClassName();
        return new $class();
    }

    /**
     * Remove a client from the databasee
     * @param  Client $client A Client instance
     * @return [type]         [description]
     */
    
    public function delete(Client $client)
    {
        $this->getEntityManager()->remove($client);
        $this->getEntityManager()->flush();
    }
}
